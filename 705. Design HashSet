# Use set to build hashset
# Runtime: 152 ms, faster than 93.27% of Python3 online submissions for Design HashSet.
# Memory Usage: 18.3 MB, less than 65.56% of Python3 online submissions for Design HashSet.

class MyHashSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.hashset = set()

    def add(self, key: int) -> None:
        self.hashset.add(key)

    def remove(self, key: int) -> None:
        if key in self.hashset:
            self.hashset.remove(key)

    def contains(self, key: int) -> bool:
        """
        Returns true if this set contains the specified element
        """
        return key in self.hashset


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)
