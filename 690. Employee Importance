# Runtime: 160 ms, faster than 92.83% of Python3 online submissions for Employee Importance.
# Memory Usage: 15 MB, less than 40.00% of Python3 online submissions for Employee Importance.

# DFS Method
"""
# Definition for Employee.
class Employee:
    def __init__(self, id: int, importance: int, subordinates: List[int]):
        self.id = id
        self.importance = importance
        self.subordinates = subordinates
"""

class Solution:
    def getImportance(self, employees: List['Employee'], id: int) -> int:
        emps = {employee.id: employee for employee in employees}
        def dfs(id):
            sub_im = sum([dfs(sub_id) for sub_id in emps[id].subordinates])
            return sub_im + emps[id].importance
        return dfs(id)
        
# BFS Method
